import type { NextPage, GetStaticProps, } from 'next'
import { CSSProperties } from "react";
import Img from "next/image";
import Head from "next/head";
import styled from "styled-components";
import axios from "axios";
// images
import sunShape from "../images/assets/sun_shape.png";
import moonGradient from "../images/assets/moon_gradient.png";
import moonClay from "../images/assets/moon_clay.png";
sunShape.height
// components
import FirstHero from "../components/FirstHero/FirstHero";
import { useState } from 'react';



export const getStaticProps: GetStaticProps = async (context) => {


  return {
    props: {

    },
  }
}

interface Context {

}

const Home: NextPage<Context> = ({ }) => {
  const allImages: StaticImageData[] = [sunShape, moonGradient, moonClay]
  const [imageIndex, setImageIndex] = useState<number>(0)
  const size = 40;
  const styleImage: CSSProperties = {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center'
  }
  return (
    <Wrapper >

      <Head>
        <title >Sturlei Homep√•ge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainWrapper>
        <FirstHero
          leftContent={
            <div>
              <HeaderOne>Making it happen</HeaderOne>
              <PhraseOne>By doing less. Don&apos;t overdo things</PhraseOne>
            </div>
          }
          rightContent={
            <div style={styleImage}>
              <Img
                src={allImages[imageIndex]}
                width={allImages[imageIndex].width * (size / 100) + 'px'}
                height={allImages[imageIndex].height * (size / 100) + 'px'}
                onClick={() => {
                  if (imageIndex === allImages.length - 1)
                    return setImageIndex(0);
                  setImageIndex(imageIndex + 1)
                }}
              />
            </div>
          }
        />
      </MainWrapper>


      <FooterWrapper >

      </FooterWrapper>
    </Wrapper >
  )
}





const Wrapper = styled.div`


  


`;

const MainWrapper = styled.main`

`;

const FooterWrapper = styled.footer`

`;

const HeaderOne = styled.h1`
  position: relative;
  font-size: 8rem;
  display: flex;
  margin-bottom: 3.5rem;
  &:after{
    position: absolute;
    height: 2rem;
    width: 30%;
    content: '';
    left: 0;
    top: calc(100% + .2rem);
    background-color: currentColor;

  }

`;
const PhraseOne = styled.p`
  font-size: 2rem;

`;



export default Home
